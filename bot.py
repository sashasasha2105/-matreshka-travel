#!/usr/bin/env python3
"""
Telegram –±–æ—Ç –¥–ª—è –ú–∞—Ç—Ä–µ—à–∫–∞ - –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –†–æ—Å—Å–∏–∏
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è 24/7 —Ä–∞–±–æ—Ç—ã
"""

import logging
import asyncio
import signal
import sys
import aiohttp
from datetime import datetime
from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram.error import NetworkError, TimedOut

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.StreamHandler(sys.stdout),
        logging.FileHandler('matreshka_bot.log', encoding='utf-8')
    ]
)
logger = logging.getLogger(__name__)

# API —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8284679572:AAE36-iXRiJgZr2Y526TKyAGA-z-IdD1SRg"

# URL –≤–∞—à–µ–≥–æ Web App
WEB_APP_URL = "https://sashasasha2105.github.io/-matreshka-travel/"

# –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç
ANALYTICS_BOT_TOKEN = "7471119413:AAH8RHbU0dLSMSMRjgKS6yW4JoMBFp6ylFA"
ANALYTICS_CHAT_ID = "1540847019"

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è graceful shutdown
shutdown_event = asyncio.Event()


async def send_analytics(user, action="bot_start"):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ Telegram"""
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        timestamp = datetime.now().strftime("%d.%m.%Y, %H:%M:%S")

        message = f"""
üöÄ <b>–ù–û–í–´–ô –ó–ê–ü–£–°–ö –ë–û–¢–ê</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b>
‚îú ID: <code>{user.id}</code>
‚îú –ù–∏–∫–Ω–µ–π–º: @{user.username or '–Ω–µ—Ç'}
‚îú –ò–º—è: {user.first_name} {user.last_name or ''}
‚îú –Ø–∑—ã–∫: {user.language_code or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
{f'‚îú ‚≠ê Premium –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' if user.is_premium else ''}

‚è∞ <b>–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:</b> {timestamp}
üÜî <b>User ID:</b> <code>{user.id}</code>
""".strip()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç
        url = f"https://api.telegram.org/bot{ANALYTICS_BOT_TOKEN}/sendMessage"

        async with aiohttp.ClientSession() as session:
            async with session.post(url, json={
                "chat_id": ANALYTICS_CHAT_ID,
                "text": message,
                "parse_mode": "HTML"
            }) as response:
                if response.status == 200:
                    logger.info(f"‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
                else:
                    logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {response.status}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫—É –∑–∞–ø—É—Å–∫–∞ Web App"""
    user = update.effective_user

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    await send_analytics(user)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App
    keyboard = [
        [InlineKeyboardButton(
            text="ü™Ü –û—Ç–∫—Ä—ã—Ç—å –ú–∞—Ç—Ä–µ—à–∫—É",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_message = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
        "ü™Ü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ú–∞—Ç—Ä–µ—à–∫—É</b> ‚Äî —Ç–≤–æ–π –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ –†–æ—Å—Å–∏–∏!\n\n"
        "‚ú® –ò—Å—Å–ª–µ–¥—É–π —Ä–µ–≥–∏–æ–Ω—ã\n"
        "üéí –í—ã–±–∏—Ä–∞–π –≥–æ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π\n"
        "üó∫Ô∏è –ù–∞—Ö–æ–¥–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
        "üì± –ü–æ–ª—É—á–∞–π QR-–∫–æ–¥—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ! üëá"
    )

    await update.message.reply_text(
        welcome_message,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

    logger.info(f"User {user.id} ({user.username}) started the bot")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å"""
    help_text = (
        "ü™Ü <b>–ú–∞—Ç—Ä–µ—à–∫–∞ - –ü–æ–º–æ—â—å</b>\n\n"
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/about - –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–û—Ç–∫—Ä—ã—Ç—å –ú–∞—Ç—Ä–µ—à–∫—É'\n"
        "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–ª–∏ –≥–æ—Ç–æ–≤—ã–π –ø–∞–∫–µ—Ç\n"
        "3Ô∏è‚É£ –ò–∑—É—á–∞–π—Ç–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
        "4Ô∏è‚É£ –ü–æ–ª—É—á–∞–π—Ç–µ QR-–∫–æ–¥—ã –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n\n"
        "–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π! üá∑üá∫"
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App
    keyboard = [
        [InlineKeyboardButton(
            text="ü™Ü –û—Ç–∫—Ä—ã—Ç—å –ú–∞—Ç—Ä–µ—à–∫—É",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        help_text,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )


async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
    about_text = (
        "ü™Ü <b>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ú–∞—Ç—Ä–µ—à–∫–∞</b>\n\n"
        "–ú–∞—Ç—Ä–µ—à–∫–∞ ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –ø–æ –†–æ—Å—Å–∏–∏.\n\n"
        "üåü <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ 15+ —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏\n"
        "‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π\n"
        "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã 2GIS\n"
        "‚Ä¢ QR-–∫–æ–¥—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö\n"
        "‚Ä¢ –õ–µ–Ω—Ç–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
        "üéØ <b>–ù–∞—à–∞ –º–∏—Å—Å–∏—è:</b>\n"
        "–°–¥–µ–ª–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –†–æ—Å—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ!\n\n"
        "üöÄ –í–µ—Ä—Å–∏—è: 1.0\n"
        "üìÖ 2025"
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App
    keyboard = [
        [InlineKeyboardButton(
            text="ü™Ü –û—Ç–∫—Ä—ã—Ç—å –ú–∞—Ç—Ä–µ—à–∫—É",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        about_text,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    logger.error("Exception while handling an update:", exc_info=context.error)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫
    if isinstance(context.error, NetworkError):
        logger.warning("Network error occurred, bot will retry automatically")
    elif isinstance(context.error, TimedOut):
        logger.warning("Request timed out, bot will retry automatically")
    else:
        logger.error(f"Unexpected error: {type(context.error).__name__}: {context.error}")


def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown"""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –Ω–∞—á–∏–Ω–∞–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞...")
    shutdown_event.set()


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º"""
    logger.info("ü™Ü –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –ú–∞—Ç—Ä–µ—à–∫–∞...")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    application = (
        Application.builder()
        .token(BOT_TOKEN)
        .connect_timeout(30.0)
        .read_timeout(30.0)
        .write_timeout(30.0)
        .pool_timeout(30.0)
        .connection_pool_size(8)
        .build()
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("about", about_command))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
    logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    logger.info("üîÑ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ 24/7 —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")

    try:
        application.run_polling(
            allowed_updates=Update.ALL_TYPES,
            drop_pending_updates=True,
            close_loop=False
        )
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
        logger.info("–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏")
        sys.exit(1)
    finally:
        logger.info("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")


if __name__ == '__main__':
    main()
