/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è Matreshka Travel
 * –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ JavaScript –æ—à–∏–±–∫–∏ –∏ Promise rejections
 */

(function() {
    'use strict';

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const ERROR_HANDLER_CONFIG = {
        enabled: true,
        showToast: true, // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        logToConsole: true,
        maxErrorsPerSession: 50, // –ú–∞–∫—Å–∏–º—É–º –æ—à–∏–±–æ–∫ –∑–∞ —Å–µ—Å—Å–∏—é
        ignoredErrors: [
            'ResizeObserver loop limit exceeded', // –ò–∑–≤–µ—Å—Ç–Ω–∞—è –±–µ–∑–æ–±–∏–¥–Ω–∞—è –æ—à–∏–±–∫–∞ Chrome
            'Non-Error promise rejection captured' // Promise.reject –±–µ–∑ Error –æ–±—ä–µ–∫—Ç–∞
        ]
    };

    // –°—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    let errorCount = 0;
    const errorLog = [];

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–Ω–æ –ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É
     */
    function shouldIgnoreError(message) {
        return ERROR_HANDLER_CONFIG.ignoredErrors.some(ignored =>
            message && message.includes(ignored)
        );
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
     */
    function logError(errorInfo) {
        if (ERROR_HANDLER_CONFIG.logToConsole) {
            console.error('üî¥ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –æ—à–∏–±–∫–∞:', errorInfo);
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–≥
        errorLog.push({
            ...errorInfo,
            timestamp: new Date().toISOString(),
            userAgent: navigator.userAgent,
            url: window.location.href
        });

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞
        if (errorLog.length > ERROR_HANDLER_CONFIG.maxErrorsPerSession) {
            errorLog.shift();
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     */
    function showErrorToast(message) {
        if (!ERROR_HANDLER_CONFIG.showToast) return;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è showToast –¥–æ—Å—Ç—É–ø–Ω–∞
        if (typeof showToast === 'function') {
            showToast(`‚ö†Ô∏è ${message}`, 5000);
        } else {
            // Fallback –µ—Å–ª–∏ showToast –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
            console.warn('showToast –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –æ—à–∏–±–∫–∞:', message);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö JavaScript –æ—à–∏–±–æ–∫
     */
    window.addEventListener('error', function(event) {
        if (!ERROR_HANDLER_CONFIG.enabled) return;

        const { message, filename, lineno, colno, error } = event;

        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—à–∏–±–∫–∏
        if (shouldIgnoreError(message)) {
            return;
        }

        errorCount++;

        const errorInfo = {
            type: 'JavaScript Error',
            message: message || 'Unknown error',
            filename: filename || 'unknown',
            line: lineno,
            column: colno,
            stack: error?.stack || 'No stack trace',
            count: errorCount
        };

        logError(errorInfo);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—à–∏–±–æ–∫
        if (errorCount <= 3) {
            showErrorToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.');
        }

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –æ—à–∏–±–æ–∫
        if (errorCount > ERROR_HANDLER_CONFIG.maxErrorsPerSession) {
            console.error('üõë –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –æ—à–∏–±–æ–∫ –∑–∞ —Å–µ—Å—Å–∏—é. –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.');
            ERROR_HANDLER_CONFIG.enabled = false;
        }

        // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º
        return false;
    });

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö Promise rejections
     */
    window.addEventListener('unhandledrejection', function(event) {
        if (!ERROR_HANDLER_CONFIG.enabled) return;

        const reason = event.reason;

        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ Promise rejections
        if (shouldIgnoreError(String(reason))) {
            return;
        }

        errorCount++;

        const errorInfo = {
            type: 'Unhandled Promise Rejection',
            message: String(reason) || 'Unknown rejection',
            stack: reason?.stack || 'No stack trace',
            count: errorCount
        };

        logError(errorInfo);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (errorCount <= 3) {
            showErrorToast('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å (—É–∂–µ –ª–æ–≥–∏—Ä—É–µ–º —Å–∞–º–∏)
        event.preventDefault();
    });

    /**
     * Wrapper –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
     * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: safeExecute(() => { –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å })
     */
    window.safeExecute = function(fn, fallback = null) {
        try {
            return fn();
        } catch (error) {
            console.error('üî¥ –û—à–∏–±–∫–∞ –≤ safeExecute:', error);
            logError({
                type: 'SafeExecute Error',
                message: error.message,
                stack: error.stack
            });

            if (fallback) {
                return fallback();
            }

            return null;
        }
    };

    /**
     * Async wrapper –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
     */
    window.safeExecuteAsync = async function(fn, fallback = null) {
        try {
            return await fn();
        } catch (error) {
            console.error('üî¥ –û—à–∏–±–∫–∞ –≤ safeExecuteAsync:', error);
            logError({
                type: 'SafeExecuteAsync Error',
                message: error.message,
                stack: error.stack
            });

            if (fallback) {
                return await fallback();
            }

            return null;
        }
    };

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
     */
    window.getErrorLog = function() {
        return errorLog;
    };

    /**
     * –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥ –æ—à–∏–±–æ–∫
     */
    window.clearErrorLog = function() {
        errorLog.length = 0;
        errorCount = 0;
        ERROR_HANDLER_CONFIG.enabled = true;
        console.log('‚úÖ –õ–æ–≥ –æ—à–∏–±–æ–∫ –æ—á–∏—â–µ–Ω');
    };

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—à–∏–±–æ–∫
     */
    window.getErrorStats = function() {
        return {
            totalErrors: errorCount,
            loggedErrors: errorLog.length,
            handlerEnabled: ERROR_HANDLER_CONFIG.enabled,
            recentErrors: errorLog.slice(-10)
        };
    };

    console.log('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π error handler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
})();
