/**
 * üè¢ –ü–û–õ–ù–ê–Ø –ö–ê–†–¢–û–ß–ö–ê –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ò 2GIS
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–∞–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ 2–ì–ò–°
 */

class Organization2GISCard {
    constructor(apiKey) {
        this.apiKey = apiKey;
        this.catalogApiUrl = 'https://catalog.api.2gis.com/3.0/items';
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ü–û–õ–ù–£–Æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ ID
     */
    async getFullOrganizationData(orgId) {
        try {
            console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', orgId);

            // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è
            const fields = [
                'items.name',
                'items.address',
                'items.point',
                'items.purpose_name',
                'items.rubrics',
                'items.contact_groups',      // –ö–æ–Ω—Ç–∞–∫—Ç—ã (—Ç–µ–ª–µ—Ñ–æ–Ω—ã, —Å–∞–π—Ç, email)
                'items.schedule',            // –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
                'items.reviews',             // –û—Ç–∑—ã–≤—ã –∏ —Ä–µ–π—Ç–∏–Ω–≥
                'items.photos',              // –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                'items.description',         // –û–ø–∏—Å–∞–Ω–∏–µ
                'items.org',                 // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
                'items.external_content',    // –í–Ω–µ—à–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
                'items.flags',               // –§–ª–∞–≥–∏ (Wi-Fi, –ø–∞—Ä–∫–æ–≤–∫–∞ –∏ —Ç.–¥.)
                'items.links',               // –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏
                'items.locale',              // –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
                'items.context',             // –ö–æ–Ω—Ç–µ–∫—Å—Ç
                'items.ads'                  // –†–µ–∫–ª–∞–º–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã (–∞–∫—Ü–∏–∏, —Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
            ].join(',');

            const params = new URLSearchParams({
                id: orgId,
                key: this.apiKey,
                fields: fields,
                locale: 'ru_RU'
            });

            const url = `${this.catalogApiUrl}?${params}`;
            console.log('üì° API –∑–∞–ø—Ä–æ—Å:', url);

            const response = await fetch(url);

            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }

            const data = await response.json();
            console.log('üì¶ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', data);

            if (!data.result || !data.result.items || data.result.items.length === 0) {
                throw new Error('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }

            return data.result.items[0];

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', error);
            throw error;
        }
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ü–û–õ–ù–û–ô –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
     */
    async showFullCard(orgId, containerElement) {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫
            this.showLoadingState(containerElement);

            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const org = await this.getFullOrganizationData(orgId);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
            this.currentOrg = org;

            // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞
            containerElement.innerHTML = this.renderSidebarCard(org);

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            this.initializeCardInteractions(containerElement, org);

        } catch (error) {
            this.showErrorState(containerElement, error.message);
        }
    }

    /**
     * –†–µ–Ω–¥–µ—Ä –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    renderFullCard(org) {
        const html = `
            <div class="org-card-full">
                <!-- –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (—Å–ª–∞–π–¥–µ—Ä) -->
                ${this.renderPhotoGallery(org)}

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class="org-card-header">
                    ${this.renderHeader(org)}
                </div>

                <!-- –¢–∞–±—ã -->
                <div class="org-card-tabs">
                    ${this.renderTabs()}
                </div>

                <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ -->
                <div class="org-card-content">
                    <!-- –¢–∞–±: –ö–æ–Ω—Ç–∞–∫—Ç—ã -->
                    <div class="org-tab-pane active" data-tab="contacts">
                        ${this.renderContactsTab(org)}
                    </div>

                    <!-- –¢–∞–±: –ò–Ω—Ñ–æ -->
                    <div class="org-tab-pane" data-tab="info">
                        ${this.renderInfoTab(org)}
                    </div>

                    <!-- –¢–∞–±: –û—Ç–∑—ã–≤—ã -->
                    <div class="org-tab-pane" data-tab="reviews">
                        ${this.renderReviewsTab(org)}
                    </div>

                    <!-- –¢–∞–±: –§–æ—Ç–æ -->
                    <div class="org-tab-pane" data-tab="photos">
                        ${this.renderPhotosTab(org)}
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                ${this.renderActionButtons(org)}
            </div>
        `;

        return html;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π)
     */
    renderSidebarCard(org) {
        const rating = org.reviews?.general_rating || 0;
        const reviewCount = org.reviews?.general_review_count || 0;

        return `
            <div class="org-sidebar-card" style="animation: slideInRight 0.3s ease;">
                <!-- –®–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ -->
                ${this.renderCompactPhotoHeader(org)}

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div style="padding: 20px;">
                    <!-- –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è -->
                    <h2 class="org-name" style="font-size: 1.3rem; color: #fff; margin: 0 0 8px 0; line-height: 1.3;">
                        ${org.name || '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è'}
                    </h2>

                    <p class="org-category" style="color: #ffcc00; font-size: 0.9rem; margin: 0 0 12px 0;">
                        ${org.purpose_name || org.rubrics?.[0]?.name || '–ú–µ—Å—Ç–æ'}
                    </p>

                    <!-- –†–µ–π—Ç–∏–Ω–≥ -->
                    ${rating > 0 ? `
                        <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 16px; background: rgba(255,204,0,0.1); padding: 10px; border-radius: 8px;">
                            <div class="rating-stars" style="color: #ffcc00; font-size: 1rem;">
                                ${this.renderStars(rating)}
                            </div>
                            <span style="color: #ffcc00; font-weight: 700; font-size: 1.1rem;">${rating.toFixed(1)}</span>
                            <span style="color: #999; font-size: 0.85rem;">(${reviewCount} –æ—Ç–∑—ã–≤–æ–≤)</span>
                        </div>
                    ` : ''}

                    <!-- –ê–¥—Ä–µ—Å -->
                    <div style="display: flex; gap: 8px; margin-bottom: 20px; padding: 12px; background: rgba(255,255,255,0.05); border-radius: 8px;">
                        <span style="font-size: 1.2rem;">üìç</span>
                        <span style="color: #d0d0d0; font-size: 0.9rem; line-height: 1.4;">
                            ${org.address?.name || '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω'}
                        </span>
                    </div>

                    <!-- –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã -->
                    ${this.renderCompactSchedule(org.schedule)}

                    <!-- –ö–æ–Ω—Ç–∞–∫—Ç—ã -->
                    ${this.renderCompactContacts(org.contact_groups)}

                    <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
                    ${org.description ? `
                        <div style="margin-top: 20px; padding: 16px; background: rgba(255,255,255,0.03); border-radius: 12px; border-left: 3px solid #667eea;">
                            <h4 style="color: #ffcc00; font-size: 0.95rem; margin: 0 0 8px 0; font-weight: 600;">üìù –û–ø–∏—Å–∞–Ω–∏–µ</h4>
                            <p style="color: #e0e0e0; line-height: 1.5; margin: 0; font-size: 0.9rem;">
                                ${org.description}
                            </p>
                        </div>
                    ` : ''}

                    <!-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä—É–±—Ä–∏–∫–∏ -->
                    ${this.renderCompactCategories(org.rubrics)}

                    <!-- –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ (Wi-Fi, –ø–∞—Ä–∫–æ–≤–∫–∞ –∏ —Ç.–¥.) -->
                    ${this.renderCompactFeatures(org)}

                    <!-- –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ -->
                    ${this.renderCompactSocials(org.links)}

                    <!-- –û—Ç–∑—ã–≤—ã -->
                    ${this.renderCompactReviews(org.reviews)}

                    <!-- –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ -->
                    ${this.renderCompactPhotos(org.photos)}

                    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                    ${this.renderAdditionalInfo(org)}

                </div>
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —à–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ
     */
    renderCompactPhotoHeader(org) {
        const photos = org.photos || [];

        if (photos.length > 0) {
            const mainPhoto = photos[0];
            const photoUrl = mainPhoto.url || mainPhoto.thumbnail_url;

            return `
                <div style="position: relative; width: 100%; height: 180px; background: linear-gradient(135deg, #667eea, #764ba2); overflow: hidden;">
                    <img src="${photoUrl}"
                         style="width: 100%; height: 100%; object-fit: cover;"
                         onerror="this.style.display='none'">
                    ${photos.length > 1 ? `
                        <div style="position: absolute; bottom: 12px; right: 12px; background: rgba(0,0,0,0.7); color: #fff; padding: 6px 12px; border-radius: 16px; font-size: 0.8rem; font-weight: 500;">
                            üì∑ ${photos.length} —Ñ–æ—Ç–æ
                        </div>
                    ` : ''}
                </div>
            `;
        }

        const icon = this.getCategoryIcon(org);
        return `
            <div style="width: 100%; height: 120px; background: linear-gradient(135deg, #667eea, #764ba2); display: flex; align-items: center; justify-content: center;">
                <div style="font-size: 4rem; opacity: 0.9;">${icon}</div>
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
     */
    renderCompactSchedule(schedule) {
        if (!schedule || !schedule.working_hours || schedule.working_hours.length === 0) {
            return '';
        }

        const isOpenNow = this.checkIfOpenNow(schedule);
        const statusColor = isOpenNow ? '#4caf50' : '#f44336';
        const statusText = isOpenNow ? '–û—Ç–∫—Ä—ã—Ç–æ' : '–ó–∞–∫—Ä—ã—Ç–æ';

        const hours = schedule.working_hours.slice(0, 3).map(day => {
            const timeStr = day.working_time_periods?.map(p => `${p.time_from}-${p.time_to}`).join(', ') || '–ó–∞–∫—Ä—ã—Ç–æ';
            return `
                <div style="display: flex; justify-content: space-between; font-size: 0.85rem; margin-bottom: 4px;">
                    <span style="color: #999;">${day.day_name}</span>
                    <span style="color: #fff; font-weight: 500;">${timeStr}</span>
                </div>
            `;
        }).join('');

        return `
            <div style="margin-bottom: 20px; padding: 16px; background: rgba(255,255,255,0.03); border-radius: 12px;">
                <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 12px;">
                    <span style="font-size: 1.2rem;">üïí</span>
                    <span style="color: ${statusColor}; font-weight: 700; font-size: 1rem;">${statusText}</span>
                </div>
                ${hours}
                ${schedule.working_hours.length > 3 ? `
                    <div style="color: #ffcc00; font-size: 0.85rem; margin-top: 8px; cursor: pointer;" onclick="alert('–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')">
                        + –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                    </div>
                ` : ''}
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
     */
    renderCompactContacts(contactGroups) {
        if (!contactGroups || contactGroups.length === 0) return '';

        const contacts = contactGroups.flatMap(group => group.contacts || []);
        if (contacts.length === 0) return '';

        const contactsHtml = contacts.map(contact => {
            let icon = 'üìû';
            let value = contact.value;
            let clickable = '';

            switch (contact.type) {
                case 'phone':
                    icon = 'üìû';
                    value = `<a href="tel:${contact.value}" style="color: #2196f3; text-decoration: none;">${contact.value}</a>`;
                    clickable = 'cursor: pointer;';
                    break;
                case 'website':
                    icon = 'üåê';
                    value = `<a href="${contact.value}" target="_blank" style="color: #2196f3; text-decoration: none; word-break: break-all;">${contact.value}</a>`;
                    clickable = 'cursor: pointer;';
                    break;
                case 'email':
                    icon = 'üìß';
                    value = `<a href="mailto:${contact.value}" style="color: #2196f3; text-decoration: none;">${contact.value}</a>`;
                    clickable = 'cursor: pointer;';
                    break;
            }

            return `
                <div style="display: flex; align-items: center; gap: 12px; padding: 10px; background: rgba(255,255,255,0.05); border-radius: 8px; margin-bottom: 8px; ${clickable}">
                    <span style="font-size: 1.2rem;">${icon}</span>
                    <span style="color: #e0e0e0; font-size: 0.9rem; flex: 1;">${value}</span>
                </div>
            `;
        }).join('');

        return `
            <div style="margin-bottom: 20px;">
                <h4 style="color: #ffcc00; font-size: 0.95rem; margin: 0 0 12px 0; font-weight: 600;">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
                ${contactsHtml}
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    renderCompactCategories(rubrics) {
        if (!rubrics || rubrics.length === 0) return '';

        const tags = rubrics.slice(0, 5).map(rubric =>
            `<span style="background: rgba(33,150,243,0.2); color: #64b5f6; padding: 6px 12px; border-radius: 16px; font-size: 0.8rem; font-weight: 500; display: inline-block; margin: 4px;">${rubric.name}</span>`
        ).join('');

        return `
            <div style="margin-bottom: 20px;">
                <h4 style="color: #ffcc00; font-size: 0.95rem; margin: 0 0 12px 0; font-weight: 600;">üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h4>
                <div style="display: flex; flex-wrap: wrap; gap: 4px;">
                    ${tags}
                </div>
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
     */
    renderCompactFeatures(org) {
        const features = [];

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª–µ–π
        if (org.flags) {
            if (org.flags.wifi) features.push('üì∂ Wi-Fi');
            if (org.flags.parking) features.push('üÖøÔ∏è –ü–∞—Ä–∫–æ–≤–∫–∞');
            if (org.flags.card_payment) features.push('üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π');
            if (org.flags.booking) features.push('üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ');
        }

        if (features.length === 0) return '';

        return `
            <div style="margin-bottom: 20px; padding: 16px; background: rgba(76,175,80,0.1); border-radius: 12px; border-left: 3px solid #4caf50;">
                <h4 style="color: #4caf50; font-size: 0.95rem; margin: 0 0 12px 0; font-weight: 600;">‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h4>
                <div style="display: flex; flex-wrap: wrap; gap: 8px;">
                    ${features.map(f => `<span style="color: #e0e0e0; font-size: 0.85rem;">${f}</span>`).join(' ‚Ä¢ ')}
                </div>
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Å–æ—Ü—Å–µ—Ç–∏
     */
    renderCompactSocials(links) {
        if (!links || links.length === 0) return '';

        const socials = [];
        links.forEach(link => {
            const url = link.url || link.href || '';
            if (url.includes('vk.com')) socials.push({name: 'VK', icon: 'VK', url, color: '#4680c2'});
            if (url.includes('t.me') || url.includes('telegram')) socials.push({name: 'Telegram', icon: '‚úàÔ∏è', url, color: '#0088cc'});
            if (url.includes('instagram')) socials.push({name: 'Instagram', icon: 'üì∑', url, color: '#e4405f'});
            if (url.includes('youtube')) socials.push({name: 'YouTube', icon: '‚ñ∂Ô∏è', url, color: '#ff0000'});
        });

        if (socials.length === 0) return '';

        return `
            <div style="margin-bottom: 20px;">
                <h4 style="color: #ffcc00; font-size: 0.95rem; margin: 0 0 12px 0; font-weight: 600;">üì± –ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö</h4>
                <div style="display: flex; flex-wrap: wrap; gap: 8px;">
                    ${socials.map(s => `
                        <a href="${s.url}" target="_blank"
                           style="background: ${s.color}; color: white; padding: 8px 14px; border-radius: 8px; font-size: 0.85rem; font-weight: 600; text-decoration: none; display: flex; align-items: center; gap: 6px;">
                            <span>${s.icon}</span>
                            <span>${s.name}</span>
                        </a>
                    `).join('')}
                </div>
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
     */
    renderCompactReviews(reviews) {
        if (!reviews || !reviews.items || reviews.items.length === 0) return '';

        const reviewsHtml = reviews.items.slice(0, 2).map(review => {
            const author = review.author?.name || '–ê–Ω–æ–Ω–∏–º';
            const rating = review.rating || 5;
            const text = review.text || '';

            return `
                <div style="background: rgba(255,255,255,0.05); padding: 12px; border-radius: 8px; margin-bottom: 10px; border-left: 3px solid #2196f3;">
                    <div style="display: flex; justify-content: space-between; margin-bottom: 8px;">
                        <span style="color: #fff; font-weight: 600; font-size: 0.9rem;">${author}</span>
                        <span style="color: #ffcc00; font-size: 0.85rem;">${this.renderStars(rating)}</span>
                    </div>
                    ${text ? `<p style="color: #d0d0d0; font-size: 0.85rem; margin: 0; line-height: 1.4;">${text}</p>` : ''}
                </div>
            `;
        }).join('');

        return `
            <div style="margin-bottom: 20px;">
                <h4 style="color: #ffcc00; font-size: 0.95rem; margin: 0 0 12px 0; font-weight: 600;">üí¨ –û—Ç–∑—ã–≤—ã</h4>
                ${reviewsHtml}
                ${reviews.items.length > 2 ? `
                    <div style="color: #64b5f6; font-size: 0.85rem; margin-top: 8px; cursor: pointer;">
                        + –µ—â—ë ${reviews.items.length - 2} –æ—Ç–∑—ã–≤–æ–≤
                    </div>
                ` : ''}
            </div>
        `;
    }

    /**
     * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ç–æ
     */
    renderCompactPhotos(photos) {
        if (!photos || photos.length <= 1) return '';

        const photosHtml = photos.slice(1, 5).map((photo, index) => {
            const url = photo.thumbnail_url || photo.url;
            return `
                <div style="width: 100%; padding-top: 100%; position: relative; border-radius: 8px; overflow: hidden; cursor: pointer;">
                    <img src="${url}"
                         style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;"
                         alt="–§–æ—Ç–æ ${index + 2}">
                </div>
            `;
        }).join('');

        return `
            <div style="margin-bottom: 20px;">
                <h4 style="color: #ffcc00; font-size: 0.95rem; margin: 0 0 12px 0; font-weight: 600;">üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (${photos.length})</h4>
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 8px;">
                    ${photosHtml}
                </div>
                ${photos.length > 5 ? `
                    <div style="color: #64b5f6; font-size: 0.85rem; margin-top: 8px; cursor: pointer; text-align: center;">
                        + –µ—â—ë ${photos.length - 4} —Ñ–æ—Ç–æ
                    </div>
                ` : ''}
            </div>
        `;
    }

    /**
     * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
     */
    renderAdditionalInfo(org) {
        const info = [];

        if (org.org) {
            if (org.org.branch_count) info.push(`–§–∏–ª–∏–∞–ª–æ–≤: ${org.org.branch_count}`);
            if (org.org.org_name) info.push(`–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${org.org.org_name}`);
        }

        if (org.context) {
            if (org.context.text) info.push(org.context.text);
        }

        if (info.length === 0) return '';

        return `
            <div style="margin-top: 20px; padding: 12px; background: rgba(255,255,255,0.03); border-radius: 8px;">
                <h4 style="color: #999; font-size: 0.85rem; margin: 0 0 8px 0; font-weight: 600;">‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h4>
                ${info.map(i => `<p style="color: #d0d0d0; font-size: 0.85rem; margin: 4px 0;">${i}</p>`).join('')}
            </div>
        `;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä –≥–∞–ª–µ—Ä–µ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–∫–∞–∫ –≤ 2–ì–ò–°)
     */
    renderPhotoGallery(org) {
        const photos = org.photos || [];

        if (photos.length === 0) {
            // –ó–∞–≥–ª—É—à–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            const icon = this.getCategoryIcon(org);
            return `
                <div class="org-photo-placeholder">
                    <div class="photo-icon">${icon}</div>
                </div>
            `;
        }

        // –ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ
        const mainPhoto = photos[0];
        const photoUrl = mainPhoto.url || mainPhoto.thumbnail_url;

        return `
            <div class="org-photo-gallery">
                <div class="photo-main" style="background-image: url('${photoUrl}')">
                    <div class="photo-controls">
                        <button class="photo-btn photo-prev">‚Äπ</button>
                        <button class="photo-btn photo-next">‚Ä∫</button>
                    </div>
                    <div class="photo-counter">
                        <span class="photo-current">1</span> / <span class="photo-total">${photos.length}</span>
                    </div>
                </div>
            </div>
        `;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä —à–∞–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–º
     */
    renderHeader(org) {
        const name = org.name || '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è';
        const category = org.purpose_name || org.rubrics?.[0]?.name || '–ú–µ—Å—Ç–æ';
        const rating = org.reviews?.general_rating || 0;
        const reviewCount = org.reviews?.general_review_count || 0;

        return `
            <div class="org-header-content">
                <h2 class="org-name">${name}</h2>
                <p class="org-category">${category}</p>

                ${rating > 0 ? `
                    <div class="org-rating-block">
                        <div class="rating-stars">${this.renderStars(rating)}</div>
                        <span class="rating-value">${rating.toFixed(1)}</span>
                        <span class="rating-count">${reviewCount} –æ—Ç–∑—ã–≤–æ–≤</span>
                    </div>
                ` : ''}

                <div class="org-address">
                    <span class="address-icon">üìç</span>
                    <span class="address-text">${org.address?.name || '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
            </div>
        `;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä —Ç–∞–±–æ–≤
     */
    renderTabs() {
        return `
            <div class="tab-list">
                <button class="tab-btn active" data-tab="contacts">–ö–æ–Ω—Ç–∞–∫—Ç—ã</button>
                <button class="tab-btn" data-tab="info">–ò–Ω—Ñ–æ</button>
                <button class="tab-btn" data-tab="reviews">–û—Ç–∑—ã–≤—ã</button>
                <button class="tab-btn" data-tab="photos">–§–æ—Ç–æ</button>
            </div>
        `;
    }

    /**
     * –¢–∞–±: –ö–æ–Ω—Ç–∞–∫—Ç—ã
     */
    renderContactsTab(org) {
        let html = `<div class="tab-content-scroll">`;

        // –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
        if (org.schedule) {
            html += this.renderWorkingHours(org.schedule);
        }

        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if (org.contact_groups && org.contact_groups.length > 0) {
            html += `<div class="org-section">`;
            html += `<h3 class="section-title">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>`;

            org.contact_groups.forEach(group => {
                if (group.contacts) {
                    group.contacts.forEach(contact => {
                        html += this.renderContactItem(contact);
                    });
                }
            });

            html += `</div>`;
        }

        // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã
        if (org.links || org.external_content) {
            html += this.renderSocialLinks(org);
        }

        html += `</div>`;
        return html;
    }

    /**
     * –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
     */
    renderWorkingHours(schedule) {
        if (!schedule.working_hours || schedule.working_hours.length === 0) {
            return '';
        }

        const isOpenNow = this.checkIfOpenNow(schedule);
        const statusClass = isOpenNow ? 'status-open' : 'status-closed';
        const statusText = isOpenNow ? '–û—Ç–∫—Ä—ã—Ç–æ' : '–ó–∞–∫—Ä—ã—Ç–æ';

        let html = `
            <div class="org-section working-hours">
                <div class="work-status ${statusClass}">
                    <span class="status-icon">üïí</span>
                    <span class="status-text">${statusText}</span>
                </div>
                <div class="hours-list">
        `;

        schedule.working_hours.forEach(day => {
            const dayName = day.day_name || '';
            const periods = day.working_time_periods || [];

            let timeStr = '–ó–∞–∫—Ä—ã—Ç–æ';
            if (periods.length > 0) {
                timeStr = periods.map(p => `${p.time_from}-${p.time_to}`).join(', ');
            }

            html += `
                <div class="hours-row">
                    <span class="day-name">${dayName}</span>
                    <span class="day-hours">${timeStr}</span>
                </div>
            `;
        });

        html += `
                </div>
            </div>
        `;

        return html;
    }

    /**
     * –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
     */
    renderContactItem(contact) {
        let icon = 'üìû';
        let value = contact.value;
        let clickable = false;

        switch (contact.type) {
            case 'phone':
                icon = 'üìû';
                clickable = true;
                value = `<a href="tel:${contact.value}">${contact.value}</a>`;
                break;
            case 'website':
                icon = 'üåê';
                clickable = true;
                value = `<a href="${contact.value}" target="_blank">${contact.value}</a>`;
                break;
            case 'email':
                icon = 'üìß';
                clickable = true;
                value = `<a href="mailto:${contact.value}">${contact.value}</a>`;
                break;
        }

        return `
            <div class="contact-item ${clickable ? 'clickable' : ''}">
                <span class="contact-icon">${icon}</span>
                <span class="contact-value">${value}</span>
            </div>
        `;
    }

    /**
     * –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
     */
    renderSocialLinks(org) {
        // –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏
        const links = org.links || [];
        const socials = [];

        // –ü–∞—Ä—Å–∏–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–æ—Ü—Å–µ—Ç–∏
        links.forEach(link => {
            const url = link.url || link.href || '';
            if (url.includes('vk.com')) socials.push({name: '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ', icon: 'VK', url, color: '#4680c2'});
            if (url.includes('t.me') || url.includes('telegram')) socials.push({name: 'Telegram', icon: '‚úàÔ∏è', url, color: '#0088cc'});
            if (url.includes('instagram')) socials.push({name: 'Instagram', icon: 'üì∑', url, color: '#e4405f'});
            if (url.includes('youtube')) socials.push({name: 'YouTube', icon: '‚ñ∂Ô∏è', url, color: '#ff0000'});
            if (url.includes('ok.ru')) socials.push({name: '–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏', icon: 'OK', url, color: '#ee8208'});
        });

        if (socials.length === 0) return '';

        let html = `
            <div class="org-section">
                <h3 class="section-title">–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö</h3>
                <div class="social-links">
        `;

        socials.forEach(social => {
            html += `
                <a href="${social.url}" target="_blank" class="social-btn" style="background-color: ${social.color}">
                    <span class="social-icon">${social.icon}</span>
                    <span class="social-name">${social.name}</span>
                </a>
            `;
        });

        html += `
                </div>
            </div>
        `;

        return html;
    }

    /**
     * –¢–∞–±: –ò–Ω—Ñ–æ
     */
    renderInfoTab(org) {
        let html = `<div class="tab-content-scroll">`;

        // –û–ø–∏—Å–∞–Ω–∏–µ
        if (org.description) {
            html += `
                <div class="org-section">
                    <h3 class="section-title">–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                    <p class="org-description">${org.description}</p>
                </div>
            `;
        }

        // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä—É–±—Ä–∏–∫–∏
        if (org.rubrics && org.rubrics.length > 0) {
            html += `
                <div class="org-section">
                    <h3 class="section-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
                    <div class="categories-list">
            `;

            org.rubrics.forEach(rubric => {
                html += `<span class="category-tag">${rubric.name}</span>`;
            });

            html += `
                    </div>
                </div>
            `;
        }

        // –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ (Wi-Fi, –ø–∞—Ä–∫–æ–≤–∫–∞ –∏ —Ç.–¥.)
        if (org.flags) {
            html += this.renderFeatures(org.flags);
        }

        html += `</div>`;
        return html;
    }

    /**
     * –¢–∞–±: –û—Ç–∑—ã–≤—ã
     */
    renderReviewsTab(org) {
        const reviews = org.reviews?.items || [];
        const rating = org.reviews?.general_rating || 0;
        const reviewCount = org.reviews?.general_review_count || 0;

        let html = `<div class="tab-content-scroll">`;

        // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        if (rating > 0) {
            html += `
                <div class="reviews-summary">
                    <div class="summary-rating">
                        <div class="big-rating">${rating.toFixed(1)}</div>
                        <div class="rating-stars">${this.renderStars(rating)}</div>
                        <div class="rating-text">${reviewCount} –æ—Ü–µ–Ω–æ–∫</div>
                    </div>
                </div>
            `;
        }

        // –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
        if (reviews.length > 0) {
            html += `<div class="reviews-list">`;

            reviews.forEach(review => {
                html += this.renderReviewItem(review);
            });

            html += `</div>`;
        } else {
            html += `
                <div class="no-reviews">
                    <p>–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤</p>
                    <p class="text-muted">–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç –æ—Ç–∑—ã–≤!</p>
                </div>
            `;
        }

        html += `</div>`;
        return html;
    }

    /**
     * –û—Ç–∑—ã–≤
     */
    renderReviewItem(review) {
        const author = review.author?.name || '–ê–Ω–æ–Ω–∏–º';
        const rating = review.rating || 5;
        const text = review.text || '';
        const date = this.formatDate(review.date_created);

        return `
            <div class="review-item">
                <div class="review-header">
                    <div class="review-author">
                        <div class="author-avatar">${author.charAt(0).toUpperCase()}</div>
                        <div class="author-info">
                            <div class="author-name">${author}</div>
                            <div class="review-date">${date}</div>
                        </div>
                    </div>
                    <div class="review-rating">
                        ${this.renderStars(rating)}
                    </div>
                </div>
                ${text ? `<p class="review-text">${text}</p>` : ''}
            </div>
        `;
    }

    /**
     * –¢–∞–±: –§–æ—Ç–æ
     */
    renderPhotosTab(org) {
        const photos = org.photos || [];

        if (photos.length === 0) {
            return `
                <div class="no-photos">
                    <p>–ù–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</p>
                </div>
            `;
        }

        let html = `<div class="photos-grid">`;

        photos.forEach((photo, index) => {
            const url = photo.thumbnail_url || photo.url;
            html += `
                <div class="photo-item" data-index="${index}" onclick="orgCard.openPhotoViewer(${index})">
                    <img src="${url}" alt="–§–æ—Ç–æ ${index + 1}" loading="lazy">
                </div>
            `;
        });

        html += `</div>`;
        return html;
    }

    /**
     * –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
     */
    renderActionButtons(org) {
        return `
            <div class="org-actions">
                <button class="action-btn btn-primary" onclick="orgCard.buildRoute()">
                    <span class="btn-icon">üó∫Ô∏è</span>
                    <span>–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç</span>
                </button>
                <button class="action-btn btn-secondary" onclick="orgCard.shareOrg()">
                    <span class="btn-icon">üì§</span>
                    <span>–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</span>
                </button>
            </div>
        `;
    }

    // ============= –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =============

    /**
     * –†–µ–Ω–¥–µ—Ä –∑–≤–µ–∑–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞
     */
    renderStars(rating) {
        const fullStars = Math.floor(rating);
        const hasHalf = rating % 1 >= 0.5;
        const emptyStars = 5 - fullStars - (hasHalf ? 1 : 0);

        return '‚òÖ'.repeat(fullStars) +
               (hasHalf ? '‚òÜ' : '') +
               '‚òÜ'.repeat(emptyStars);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    getCategoryIcon(org) {
        const category = (org.purpose_name || org.rubrics?.[0]?.name || '').toLowerCase();

        if (category.includes('–∫–∞—Ñ–µ') || category.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω')) return 'üçΩÔ∏è';
        if (category.includes('–º–∞–≥–∞–∑–∏–Ω') || category.includes('—Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç')) return 'üõí';
        if (category.includes('–±–∞–Ω–∫')) return 'üè¶';
        if (category.includes('–±–æ–ª—å–Ω–∏—Ü–∞') || category.includes('–º–µ–¥–∏—Ü–∏–Ω')) return 'üè•';
        if (category.includes('–∞–ø—Ç–µ–∫–∞')) return 'üíä';
        if (category.includes('—Ñ–∏—Ç–Ω–µ—Å') || category.includes('—Å–ø–æ—Ä—Ç')) return 'üí™';
        if (category.includes('—à–∫–æ–ª–∞') || category.includes('—É–Ω–∏–≤–µ—Ä')) return 'üéì';
        if (category.includes('–≥–æ—Å—Ç–∏–Ω–∏—Ü–∞') || category.includes('–æ—Ç–µ–ª—å')) return 'üè®';
        if (category.includes('–ø–∞—Ä–∫')) return 'üå≥';

        return 'üè¢';
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ —Å–µ–π—á–∞—Å
     */
    checkIfOpenNow(schedule) {
        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        const now = new Date();
        const dayOfWeek = now.getDay();
        const hours = now.getHours();
        const minutes = now.getMinutes();
        const currentTime = hours * 60 + minutes;

        if (!schedule.working_hours) return false;

        const todaySchedule = schedule.working_hours.find(day => {
            // –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
            return true; // TODO: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        });

        return true; // –í—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É
     */
    formatDate(dateString) {
        if (!dateString) return '–ù–µ–¥–∞–≤–Ω–æ';

        try {
            const date = new Date(dateString);
            const now = new Date();
            const diffTime = Math.abs(now - date);
            const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));

            if (diffDays === 0) return '–°–µ–≥–æ–¥–Ω—è';
            if (diffDays === 1) return '–í—á–µ—Ä–∞';
            if (diffDays < 7) return `${diffDays} –¥–Ω–µ–π –Ω–∞–∑–∞–¥`;
            if (diffDays < 30) return `${Math.floor(diffDays / 7)} –Ω–µ–¥–µ–ª—å –Ω–∞–∑–∞–¥`;

            return date.toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'short',
                year: 'numeric'
            });
        } catch {
            return '–ù–µ–¥–∞–≤–Ω–æ';
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingState(container) {
        container.innerHTML = `
            <div class="org-card-loading">
                <div class="loading-spinner"></div>
                <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...</p>
            </div>
        `;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
     */
    showErrorState(container, message) {
        container.innerHTML = `
            <div class="org-card-error">
                <p class="error-icon">‚ö†Ô∏è</p>
                <p class="error-message">${message}</p>
                <button class="btn-retry" onclick="location.reload()">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
            </div>
        `;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
     */
    initializeCardInteractions(container, org) {
        // –¢–∞–±—ã
        const tabButtons = container.querySelectorAll('.tab-btn');
        const tabPanes = container.querySelectorAll('.org-tab-pane');

        tabButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                const targetTab = btn.dataset.tab;

                // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö
                tabButtons.forEach(b => b.classList.remove('active'));
                tabPanes.forEach(p => p.classList.remove('active'));

                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Ç–µ–∫—É—â–∏–µ
                btn.classList.add('active');
                container.querySelector(`.org-tab-pane[data-tab="${targetTab}"]`).classList.add('active');
            });
        });

        // –ì–∞–ª–µ—Ä–µ—è —Ñ–æ—Ç–æ
        this.initPhotoGallery(container, org);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏
     */
    initPhotoGallery(container, org) {
        const photos = org.photos || [];
        if (photos.length === 0) return;

        let currentPhotoIndex = 0;
        const prevBtn = container.querySelector('.photo-prev');
        const nextBtn = container.querySelector('.photo-next');
        const photoMain = container.querySelector('.photo-main');
        const currentCounter = container.querySelector('.photo-current');

        const updatePhoto = (index) => {
            currentPhotoIndex = index;
            const photo = photos[index];
            const url = photo.url || photo.thumbnail_url;
            photoMain.style.backgroundImage = `url('${url}')`;
            if (currentCounter) currentCounter.textContent = index + 1;
        };

        if (prevBtn) {
            prevBtn.addEventListener('click', () => {
                const newIndex = currentPhotoIndex > 0 ? currentPhotoIndex - 1 : photos.length - 1;
                updatePhoto(newIndex);
            });
        }

        if (nextBtn) {
            nextBtn.addEventListener('click', () => {
                const newIndex = currentPhotoIndex < photos.length - 1 ? currentPhotoIndex + 1 : 0;
                updatePhoto(newIndex);
            });
        }
    }

    /**
     * –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç
     */
    buildRoute() {
        alert('–§—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    }

    /**
     * –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
     */
    shareOrg() {
        if (navigator.share) {
            navigator.share({
                title: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
                text: '–ü–æ—Å–º–æ—Ç—Ä–∏ —ç—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é',
            });
        } else {
            alert('–§—É–Ω–∫—Ü–∏—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.orgCard = new Organization2GISCard('8a7c9b28-b45f-4f45-9784-d34db72416db');

console.log('üè¢ –ú–æ–¥—É–ª—å –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 2GIS –∑–∞–≥—Ä—É–∂–µ–Ω');
